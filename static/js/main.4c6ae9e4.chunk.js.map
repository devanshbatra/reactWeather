{"version":3,"sources":["components/Temperature.js","components/Parameters.js","components/Search.js","images/Clear.png","images/Drizzle.png","images/Rain.png","images/Snow.png","images/Mist.png","images/Thunderstorm.png","images/Clouds.png","App.js","reportWebVitals.js","index.js"],"names":["Temperature","props","className","src","iconcode","alt","weatherdesc","cityName","country","Math","floor","temperature","feelsLike","tempMin","tempMax","Parameters","humidity","pressure","cloudCover","windSpeed","toFixed","Search","city","setCity","search","setSearch","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","App","useState","data","setData","hello","setHello","Clear","backimg","setBackimg","useEffect","getWeather","console","log","a","fetch","process","response","json","getBackimg","weather","id","Thunderstorm","Drizzle","Rain","Snow","Mist","Clouds","map","helloe","name","description","main","temp","icon","sys","feels_like","temp_min","temp_max","clouds","all","wind","speed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c6ae9e4.chunk.js","sourcesContent":["import React from 'react';\r\nconst Temperature =(props)=>{\r\n    return(\r\n            <div className=\"main-data\">\r\n                <img className='weather-icon' src={`http://openweathermap.org/img/wn/${props.iconcode}@2x.png`} alt=\"Weather icon\" />\r\n                <h1 className=\"condition center\"> {props.weatherdesc} </h1>\r\n                <h3 className=\"city-name\">{props.cityName}, {props.country} </h3>\r\n                <div className=\"temp-box\">\r\n                    <h1 className=\"temp\"> {Math.floor((props.temperature)-273.15)} </h1>\r\n                    <h1 className=\"deg\">&deg;C</h1>\r\n                </div>\r\n                <h2>Feels like {Math.floor((props.feelsLike)-273.15)}&deg;C</h2>\r\n                <h3>{Math.floor((props.tempMin)-273.15)}&deg;C/{Math.floor((props.tempMax)-273.15)}&deg;C</h3>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Temperature;","import React from 'react';\r\n\r\nconst Parameters = (props) => {\r\n\r\n\r\n    return (\r\n        <div className=\"para-box\">\r\n            <div className=\"humidity\">\r\n                <div className=\"label\">\r\n                    <i className=\"fas fa-burn para-icon\"></i>\r\n                    <p>Humidity</p>\r\n                </div>\r\n                <h2> {props.humidity} %</h2>\r\n            </div>\r\n            <div className=\"pressure\">\r\n                <div className=\"label\">\r\n                    <i className=\"fab fa-pied-piper-hat para-icon\"></i>\r\n                    <p>Air Pressure</p>\r\n                </div>\r\n                <h2>{props.pressure} PS</h2>\r\n            </div>\r\n            <div className=\"rain\">\r\n                <div className=\"label\">\r\n                    <i className=\"fas fa-cloud para-icon\"></i>\r\n                    <p>Cloud Cover</p>\r\n                </div>\r\n                <h2>{props.cloudCover} %</h2>\r\n            </div>\r\n            <div className=\"wind\">\r\n                <div className=\"label\">\r\n                    <i className=\"fas fa-wind para-icon\"></i>\r\n                    <p>Wind Speed</p>\r\n                </div>\r\n                <h2>{((props.windSpeed)*3.6).toFixed(1)} km/h</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Parameters;","import React from 'react';\r\n\r\nconst Search = ({city, setCity, search, setSearch}) => {\r\n    const getSearch = (e) => {\r\n        setSearch(e.target.value);\r\n    };\r\n\r\n    const getCity = (e) => {\r\n        \r\n        e.preventDefault();\r\n        setCity(search);\r\n        setSearch('');\r\n    };\r\n\r\n    return (\r\n        <form className=\"search-form\" onSubmit={getCity} >\r\n            <input type=\"text\" className='search-bar' placeholder='Search for a city' onChange={getSearch} />\r\n            <button className=\"search-button\" type='submit' ><i className=\"fas fa-search\"></i></button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Search;","export default __webpack_public_path__ + \"static/media/Clear.3f6bcf95.png\";","export default __webpack_public_path__ + \"static/media/Drizzle.70ef6fa7.png\";","export default __webpack_public_path__ + \"static/media/Rain.a67f5cfb.png\";","export default __webpack_public_path__ + \"static/media/Snow.f98ffac6.png\";","export default __webpack_public_path__ + \"static/media/Mist.096215f8.png\";","export default __webpack_public_path__ + \"static/media/Thunderstorm.b194d978.png\";","export default __webpack_public_path__ + \"static/media/Clouds.af5dd679.png\";","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Temperature from './components/Temperature';\nimport Parameters from './components/Parameters';\nimport Search from './components/Search';\nimport Clear from './images/Clear.png';\nimport Drizzle from './images/Drizzle.png';\nimport Rain from './images/Rain.png';\nimport Snow from './images/Snow.png';\nimport Mist from './images/Mist.png';\nimport Thunderstorm from './images/Thunderstorm.png';\nimport Clouds from './images/Clouds.png';\n\n\nconst App = () => {\n\n\n  const [data, setData] = useState({});\n  const [search, setSearch] = useState('');\n  const [city, setCity] = useState('Meerut');\n  const [hello, setHello] = useState([]);\n  const [backimg, setBackimg] = useState(Clear);\n  useEffect(() => {\n    getWeather();\n    console.log(\"Effect has been run!\");\n  }, [city]);\n\n\n\n\n  const getWeather = async () => {\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_API_KEY}`);\n    const data = await response.json();\n    setData(data);\n    setHello([data]);\n    getBackimg(data.weather[0].id);\n    console.log(data);\n  };\n\n  const getBackimg=(id)=>{\n    if(id>=200 && id<=299){\n      setBackimg(Thunderstorm);\n    }\n    else if (id>=300 && id<=399) {\n      setBackimg(Drizzle);\n    }\n    else if (id>=500 && id<=599) {\n      setBackimg(Rain);\n    }\n    else if (id>=600 && id<=699) {\n      setBackimg(Snow);\n    }\n    else if (id>=700 && id<=799) {\n      setBackimg(Mist);\n    }\n    else if (id==800) {\n      setBackimg(Clear);\n    }\n    else if (id>=800 && id<=899) {\n      setBackimg(Clouds);\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <img src={backimg} alt=\"\" className=\"background-img\" />\n      <Search search={search} setSearch={setSearch} city={city} setCity={setCity} />\n\n      {hello.map(helloe => (\n        <Temperature key={data.id} cityName={data.name} weatherdesc={data.weather[0].description} temperature={data.main.temp} iconcode={data.weather[0].icon} country={data.sys.country} feelsLike={data.main.feels_like} tempMin={data.main.temp_min} tempMax={data.main.temp_max} />\n      ))}\n\n\n      {hello.map(helloe=>(\n        <Parameters humidity={data.main.humidity} pressure={data.main.pressure} cloudCover={data.clouds.all} windSpeed={data.wind.speed} />\n      ))}\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}