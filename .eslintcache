[{"D:\\Web development\\Self\\react-weather-app\\weather-app\\src\\index.js":"1","D:\\Web development\\Self\\react-weather-app\\weather-app\\src\\App.js":"2","D:\\Web development\\Self\\react-weather-app\\weather-app\\src\\reportWebVitals.js":"3","D:\\Web development\\Self\\react-weather-app\\weather-app\\src\\components\\Temperature.js":"4","D:\\Web development\\Self\\react-weather-app\\weather-app\\src\\components\\Parameters.js":"5","D:\\Web development\\Self\\react-weather-app\\weather-app\\src\\components\\Search.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":2375,"mtime":1608237874691,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":873,"mtime":1607370958935,"results":"11","hashOfConfig":"8"},{"size":1291,"mtime":1607369008142,"results":"12","hashOfConfig":"8"},{"size":637,"mtime":1608198234740,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"rqlk4o",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Web development\\Self\\react-weather-app\\weather-app\\src\\index.js",[],["28","29"],"D:\\Web development\\Self\\react-weather-app\\weather-app\\src\\App.js",["30","31"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Temperature from './components/Temperature';\nimport Parameters from './components/Parameters';\nimport Search from './components/Search';\nimport Clear from './images/Clear.png';\nimport Drizzle from './images/Drizzle.png';\nimport Rain from './images/Rain.png';\nimport Snow from './images/Snow.png';\nimport Mist from './images/Mist.png';\nimport Thunderstorm from './images/Thunderstorm.png';\nimport Clouds from './images/Clouds.png';\n\n\nconst App = () => {\n\n\n  const [data, setData] = useState({});\n  const [search, setSearch] = useState('');\n  const [city, setCity] = useState('Meerut');\n  const [hello, setHello] = useState([]);\n  const [backimg, setBackimg] = useState(Clear);\n  useEffect(() => {\n    getWeather();\n    console.log(\"Effect has been run!\");\n  }, [city]);\n\n\n\n\n  const getWeather = async () => {\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_API_KEY}`);\n    const data = await response.json();\n    setData(data);\n    setHello([data]);\n    getBackimg(data.weather[0].id);\n    console.log(data);\n  };\n\n  const getBackimg=(id)=>{\n    if(id>=200 && id<=299){\n      setBackimg(Thunderstorm);\n    }\n    else if (id>=300 && id<=399) {\n      setBackimg(Drizzle);\n    }\n    else if (id>=500 && id<=599) {\n      setBackimg(Rain);\n    }\n    else if (id>=600 && id<=699) {\n      setBackimg(Snow);\n    }\n    else if (id>=700 && id<=799) {\n      setBackimg(Mist);\n    }\n    else if (id==800) {\n      setBackimg(Clear);\n    }\n    else if (id>=800 && id<=899) {\n      setBackimg(Clouds);\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <img src={backimg} alt=\"\" className=\"background-img\" />\n      <Search search={search} setSearch={setSearch} city={city} setCity={setCity} />\n\n      {hello.map(helloe => (\n        <Temperature key={data.id} cityName={data.name} weatherdesc={data.weather[0].description} temperature={data.main.temp} iconcode={data.weather[0].icon} country={data.sys.country} feelsLike={data.main.feels_like} tempMin={data.main.temp_min} tempMax={data.main.temp_max} />\n      ))}\n\n\n      {hello.map(helloe=>(\n        <Parameters humidity={data.main.humidity} pressure={data.main.pressure} cloudCover={data.clouds.all} windSpeed={data.wind.speed} />\n      ))}\n\n\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Web development\\Self\\react-weather-app\\weather-app\\src\\reportWebVitals.js",[],"D:\\Web development\\Self\\react-weather-app\\weather-app\\src\\components\\Temperature.js",[],"D:\\Web development\\Self\\react-weather-app\\weather-app\\src\\components\\Parameters.js",[],"D:\\Web development\\Self\\react-weather-app\\weather-app\\src\\components\\Search.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":26,"column":6,"nodeType":"38","endLine":26,"endColumn":12,"suggestions":"39"},{"ruleId":"40","severity":1,"message":"41","line":56,"column":16,"nodeType":"42","messageId":"43","endLine":56,"endColumn":18},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWeather'. Either include it or remove the dependency array.","ArrayExpression",["46"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [city, getWeather]",{"range":"49","text":"50"},[839,845],"[city, getWeather]"]